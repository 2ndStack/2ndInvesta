<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <context:component-scan base-package="org.jasoet.mandiri.controller" use-default-filters="false">
        <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>

    <!--<util:properties id="applicationProps" location="classpath:META-INF/spring/report.properties"/>-->
    <mvc:view-controller path="/uncaughtException" view-name="exception/parent"/>
    <mvc:view-controller path="/accessDenied" view-name="exception/accessDenied"/>
    <mvc:view-controller path="/resourceNotFound"  view-name="exception/parent"/>
    <mvc:view-controller path="/dataAccessFailure"  view-name="exception/parent"/>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"
          p:defaultErrorView="exception/parent">
        <property name="exceptionMappings">
            <props>
                <prop key=".DataAccessException">dataAccessFailure</prop>
                <prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
                <prop key=".TypeMismatchException">resourceNotFound</prop>
                <prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
            </props>
        </property>
    </bean>


    <mvc:annotation-driven/>
    <mvc:resources mapping="/favicon.ico" location="/resources/images/favicon.ico"/>
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <mvc:resources mapping="/report/profit/**" location="file:/opt/rep/profit/"/>
    <mvc:resources mapping="/report/bonus/**" location="file:/opt/rep/bonus/"/>
    <mvc:resources mapping="/report/profitrek/**" location="file:/opt/rep/profitrek/"/>
    <mvc:resources mapping="/report/bonusrek/**" location="file:/opt/rep/bonusrek/"/>

    <mvc:view-controller path="/" view-name="redirect:/loginpage"/>
    <!--<mvc:view-controller path="/loginpage" view-name="admin/login"/>-->

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver" p:order="2">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </bean>
    <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/layouts/layouts.xml</value>
                <value>/WEB-INF/views/views.xml</value>
                <!-- Scan views directory for Tiles configurations -->
                <value>/WEB-INF/views/**/views.xml</value>
            </list>
        </property>
    </bean>


</beans>