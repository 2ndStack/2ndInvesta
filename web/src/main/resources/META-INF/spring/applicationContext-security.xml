<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">


    <beans:bean id="captchaCaptureFilter" class="org.jasoet.mandiri.util.filter.CaptchaCaptureFilter"/>

    <!-- For verifying CAPTCHA fields -->
    <!-- Private keyz is assigned by the reCATPCHA service -->
    <beans:bean id="captchaVerifierFilter" class="org.jasoet.mandiri.util.filter.CaptchaVerifierFilter"
                p:useProxy="false"
                p:proxyPort=""
                p:proxyHost=""
                p:failureUrl="/loginpage?error=t"
                p:captchaCaptureFilter-ref="captchaCaptureFilter"
                p:privateKey="6Ld-X8ISAAAAAPOyMfEcXK9XVyUkJC9bcw7DuTDB"/>

    <http auto-config="true" use-expressions="true">
        <form-login login-processing-url="/login" login-page="/loginpage"
                    authentication-failure-url="/loginpage?error=t"
                    default-target-url="/dashboard"/>
        <logout logout-url="/logout"/>


        <custom-filter ref="captchaCaptureFilter" before="FORM_LOGIN_FILTER"/>
        <custom-filter ref="captchaVerifierFilter" after="FORM_LOGIN_FILTER"/>

        <intercept-url pattern="/resources/**" access="permitAll"/>
        <intercept-url pattern="/user/edit" access="hasAnyRole('ACTIVE')"/>
        <intercept-url pattern="/user/password" access="hasAnyRole('ACTIVE')"/>
        <intercept-url pattern="/static/**" access="permitAll"/>
        <intercept-url pattern="/**" access="permitAll"/>
    </http>

    <global-method-security secured-annotations="enabled"/>
    <beans:bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder"/>
    <beans:bean class="org.springframework.security.authentication.dao.ReflectionSaltSource" id="saltSource">
        <beans:property name="userPropertyToUse" value="salt"/>
    </beans:bean>

    <authentication-manager>
        <authentication-provider ref="daoAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="userDetailsService"
                class="org.jasoet.mandiri.service.WebSecurityService" p:userDAO-ref="userDAOImpl">
    </beans:bean>

    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
        <beans:property name="saltSource" ref="saltSource"/>
    </beans:bean>

</beans:beans>